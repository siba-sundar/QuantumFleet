// Firebase Firestore Security Rules for IndiFleet
// These rules allow authenticated users to access their data

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Development/Testing: Allow all operations (TEMPORARILY PERMISSIVE)
    // WARNING: These rules are for development only!
    // Replace with strict rules before production deployment
    match /{document=**} {
      allow read, write: if true;
    }
    
    // Future production rules (currently commented out):
    /*
    // Users collection - users can read/write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Business profiles - businesses can manage their own profiles
    match /businessProfiles/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow postal users to read business profiles for management
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'postal';
    }
    
    // Driver profiles - drivers can manage their own profiles
    match /driverProfiles/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow postal and business users to read driver profiles
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType in ['postal', 'business'];
    }
    
    // Postal profiles - postal users can manage their own profiles
    match /postalProfiles/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Truck reservations - businesses can create and manage their reservations
    match /truckReservations/{reservationId} {
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.businessUid;
      allow read, update: if request.auth != null && (
        request.auth.uid == resource.data.businessUid ||
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'postal'
      );
    }
    
    // Trucks collection - allow read for all authenticated users, write for postal
    match /trucks/{truckId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'postal';
    }
    
    // Routes collection - allow read for all authenticated users, write for postal
    match /routes/{routeId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'postal';
    }
    
    // Tracking sessions - allow based on user involvement
    match /trackingSessions/{sessionId} {
      allow read, write: if request.auth != null;
    }
    
    // Alerts - allow read/write for authenticated users
    match /alerts/{alertId} {
      allow read, write: if request.auth != null;
    }
    
    // Third party bookings - businesses can manage their bookings
    match /thirdPartyBookings/{bookingId} {
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.businessUid;
      allow read, update: if request.auth != null && (
        request.auth.uid == resource.data.businessUid ||
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'postal'
      );
    }
    */
  }
}